name: C/C++ CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

env:
  isNightly: ${{ contains(github.ref, 'dev') }}
  isFinalRelease: ${{ contains(github.ref, 'master') }}

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Add ARM architecture to APT
      run: sudo dpkg --add-architecture armhf

    - name: Setup APT repositories for ARM
      run: sudo mv sources.list /etc/apt/sources.list

    - name: Update APT repositories
      run: sudo apt-get update

    - name: Get uClibc toolchain
      uses: i3h/download-release-asset@v1
      with:
        owner: telmomarques
        repo: uClibc-toolchain
        tag: latest
        file: toolchain.tar

    - name: Install uClibc ARM cross compiler
      run: tar -xf toolchain.tar

    - name: Install dependencies
      run: sudo apt-get -y install libssl-dev:armhf

    - name: Generate makefiles for uClibc ARM
      run: ./genMakefiles armv7linux-uclibc-no-openssl

    - name: Compile uClibc
      run: make

    - name: Create Release Candidate
      if: env.isNightly == 'true'
      id: create_release_candidate
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest-rc
        release_name: latest-rc
        prerelease: true

    - name: Create Release
      if: env.isFinalRelease == 'true'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: latest
        prerelease: true

    - name: Upload Release Asset
      if: env.isNightly == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_candidate.outputs.upload_url }}
        asset_path: ./rtspserver/rtspserver
        asset_name: rtspserver
        asset_content_type: application/zip
      

    - name: Upload Release Asset
      if: env.isFinalRelease == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rtspserver/rtspserver
        asset_name: rtspserver
        asset_content_type: application/zip   
